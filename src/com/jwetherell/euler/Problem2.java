package com.jwetherell.euler;


/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
 * the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence 
 * whose values do not exceed four million, find the sum of the even-valued terms.
 * http://projecteuler.net/problem=2
 * 
 * @author Justin Wetherell <phishman3579@gmail.com>
 */
public class Problem2 {
    
    private static final int FOUR_MILLION = 4000000;
    
    public static final int solve() {
        int minusOne = 2;
        int minusTwo = 1;
        int sum = 2;

        int value = 0;
        while (true) {
            value = minusTwo+minusOne;
            minusTwo = minusOne;
            minusOne = value;
            if (value>FOUR_MILLION) break;
            if (value%2==0) sum+=value;
        }
        return sum;
    }
    
    public static final int ideal() {
        int minusOne = 8; //Second even fibo
        int minusTwo = 2; //First even fibo
        int sum = minusOne+minusTwo;

        int value = 0;
        while (true) {
            value = minusTwo+4*minusOne;
            minusTwo = minusOne;
            minusOne = value;
            if (value>FOUR_MILLION) break;
            if (value%2==0) sum+=value;
        }
        return sum;
    }
}
